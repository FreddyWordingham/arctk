initSidebarItems({"fn":[["CVPixelFormatDescriptionArrayCreateWithAllPixelFormatTypes",""],["CVPixelFormatDescriptionCreateWithPixelFormatType",""],["CVPixelFormatDescriptionRegisterDescriptionWithPixelFormatType",""]],"static":[["kCVPixelFormatBitsPerBlock","This value must be present. For simple pixel formats this will be equivalent to the traditional bitsPerPixel value."],["kCVPixelFormatBlackBlock","CFData containing the bit pattern for a block of black pixels.  If absent, black is assumed to be all zeros. If present, this should be bitsPerPixel bits long -- if bitsPerPixel is less than a byte, repeat the bit pattern  for the full byte."],["kCVPixelFormatBlockHeight",""],["kCVPixelFormatBlockHorizontalAlignment","Used to state requirements on block multiples.  v210 would be '8' here for the horizontal case,  to match the standard v210 row alignment value of 48. These may be assumed as 1 if not present."],["kCVPixelFormatBlockVerticalAlignment",""],["kCVPixelFormatBlockWidth",""],["kCVPixelFormatCGBitmapContextCompatibility",""],["kCVPixelFormatCGBitmapInfo","CGBitmapInfo value, if required"],["kCVPixelFormatCGImageCompatibility",""],["kCVPixelFormatCodecType","This is the codec type constant, i.e. '2vuy' or k422YpCbCr8CodecType"],["kCVPixelFormatComponentRange",""],["kCVPixelFormatComponentRange_FullRange",""],["kCVPixelFormatComponentRange_VideoRange",""],["kCVPixelFormatComponentRange_WideRange",""],["kCVPixelFormatConstant","QuickTime/QuickDraw Pixel Format Type constant (OSType)"],["kCVPixelFormatContainsAlpha","kCFBooleanTrue indicates that the format contains alpha and some images may be considered transparent kCFBooleanFalse indicates that there is no alpha and images are always opaque."],["kCVPixelFormatContainsRGB","kCFBooleanTrue indicates that the format contains RGB data"],["kCVPixelFormatContainsYCbCr","kCFBooleanTrue indicates that the format contains YCbCr data"],["kCVPixelFormatFillExtendedPixelsCallback",""],["kCVPixelFormatFourCC","This is the equivalent Microsoft FourCC code for this pixel format"],["kCVPixelFormatHorizontalSubsampling","Subsampling information for this plane.  Assumed to be '1' if not present."],["kCVPixelFormatName",""],["kCVPixelFormatOpenGLCompatibility",""],["kCVPixelFormatOpenGLESCompatibility",""],["kCVPixelFormatOpenGLFormat","If present, these two keys describe the OpenGL format and type enums you would use to describe this image plane to OpenGL"],["kCVPixelFormatOpenGLInternalFormat",""],["kCVPixelFormatOpenGLType",""],["kCVPixelFormatPlanes","All buffers have one or more image planes. Each plane may contain a single or an interleaved set of components For simplicity sake,  pixel formats that are not planar may place the required format keys at the top level dictionary."],["kCVPixelFormatQDCompatibility","Pixel format compatibility flags"],["kCVPixelFormatVerticalSubsampling",""]],"struct":[["CVFillExtendedPixelsCallBackData",""]],"type":[["CVFillExtendedPixelsCallBack",""]]});