initSidebarItems({"enum":[["Api","All APIs related to OpenGL that you can possibly get while using glutin."],["ContextError","Error that can happen when manipulating an OpenGL `Context`."],["CreationError","Error that can happen while creating a window or a headless renderer."],["GlProfile","Describes the requested OpenGL `Context` profiles."],["GlRequest","Describes the OpenGL API and version that are being requested when a context is created."],["NotCurrent","A type that `Context`s which are not currently current on any thread take as a generic."],["ReleaseBehavior","The behavior of the driver when you change the current context."],["Robustness","Specifies the tolerance of the OpenGL `Context` to faults. If you accept raw OpenGL commands and/or raw shader code from an untrusted source, you should definitely care about this."]],"mod":[["dpi","UI scaling is important, so read the docs for this module if you don't want to be confused."],["error",""],["event","The `Event` enum and assorted supporting types."],["event_loop","The `EventLoop` struct and assorted supporting types, including `ControlFlow`."],["monitor","Types useful for interacting with a user's monitors."],["platform","Contains traits with platform-specific methods in them."],["platform","Contains traits with platform-specific methods in them."],["window","The `Window` struct and associated types."]],"static":[["GL_CORE","The minimum core profile GL context. Useful for getting the minimum required GL version while still running on OSX, which often forbids the compatibility profile features."]],"struct":[["Context","Represents an OpenGL `Context`."],["ContextBuilder","An object that allows you to build `Context`s, `RawContext<T>`s and `WindowedContext<T>`s."],["ContextWrapper","A context which has an underlying window, which may or may not be stored separately."],["GlAttributes","Attributes to use when creating an OpenGL `Context`."],["PixelFormat","Describes a possible format."],["PixelFormatRequirements","Describes how the backend should choose a pixel format."],["PossiblyCurrent","A type that `Context`s which might possibly be currently current on some thread take as a generic."],["Rect",""]],"trait":[["ContextCurrentState","A trait implemented on both `NotCurrent` and `PossiblyCurrent`."]],"type":[["RawContext","Represents an OpenGL `Context` which has an underlying window that is stored separately."],["WindowedContext","Represents an OpenGL `Context` and the `Window` with which it is associated."]]});