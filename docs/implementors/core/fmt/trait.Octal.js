(function() {var implementors = {};
implementors["ansi_rgb"] = [{"text":"impl&lt;T&gt; Octal for WithBackground&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Octal,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Octal for WithForeground&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Octal,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["cocoa"] = [{"text":"impl Octal for NSApplicationPresentationOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSWindowStyleMask","synthetic":false,"types":[]},{"text":"impl Octal for NSWindowOrderingMode","synthetic":false,"types":[]},{"text":"impl Octal for NSAlignmentOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSWindowCollectionBehavior","synthetic":false,"types":[]},{"text":"impl Octal for NSWindowOcclusionState","synthetic":false,"types":[]},{"text":"impl Octal for NSEventSwipeTrackingOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSEventPhase","synthetic":false,"types":[]},{"text":"impl Octal for NSTouchPhase","synthetic":false,"types":[]},{"text":"impl Octal for NSEventMask","synthetic":false,"types":[]},{"text":"impl Octal for NSEventModifierFlags","synthetic":false,"types":[]},{"text":"impl Octal for NSEnumerationOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSURLBookmarkCreationOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSURLBookmarkResolutionOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSDataReadingOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSDataBase64EncodingOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSDataBase64DecodingOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSDataWritingOptions","synthetic":false,"types":[]},{"text":"impl Octal for NSDataSearchOptions","synthetic":false,"types":[]},{"text":"impl Octal for EdgeAntialiasingMask","synthetic":false,"types":[]},{"text":"impl Octal for CornerMask","synthetic":false,"types":[]},{"text":"impl Octal for AutoresizingMask","synthetic":false,"types":[]}];
implementors["console"] = [{"text":"impl&lt;D:&nbsp;Octal&gt; Octal for StyledObject&lt;D&gt;","synthetic":false,"types":[]}];
implementors["core_graphics"] = [{"text":"impl Octal for CGEventFlags","synthetic":false,"types":[]},{"text":"impl Octal for CGGradientDrawingOptions","synthetic":false,"types":[]}];
implementors["itertools"] = [{"text":"impl&lt;'a, I&gt; Octal for Format&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Octal,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["nalgebra"] = [{"text":"impl&lt;N, R:&nbsp;Dim, C:&nbsp;Dim, S&gt; Octal for Matrix&lt;N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar + Octal,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Storage&lt;N, R, C&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;usize, R, C&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["netcdf"] = [{"text":"impl Octal for Options","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Octal for Complex&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Octal + Num + PartialOrd + Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Octal + Clone + Integer&gt; Octal for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Octal for Transformations","synthetic":false,"types":[]}];
implementors["wide"] = [{"text":"impl Octal for m128i","synthetic":false,"types":[]},{"text":"impl Octal for f32x4","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Octal for ModifiersState","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()