(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl PartialOrd&lt;BigEndian&gt; for BigEndian","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LittleEndian&gt; for LittleEndian","synthetic":false,"types":[]}];
implementors["console"] = [{"text":"impl PartialOrd&lt;Attribute&gt; for Attribute","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;'g, T:&nbsp;?Sized + Pointable&gt; PartialOrd&lt;Shared&lt;'g, T&gt;&gt; for Shared&lt;'g, T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl PartialOrd&lt;Compression&gt; for Compression","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;MatchingType&gt; for MatchingType","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;PartialOrd, R:&nbsp;PartialOrd&gt; PartialOrd&lt;Either&lt;L, R&gt;&gt; for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;PartialOrd, N&gt; PartialOrd&lt;GenericArray&lt;T, N&gt;&gt; for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["hdf5_sys"] = [{"text":"impl PartialOrd&lt;H5_iter_order_t&gt; for H5_iter_order_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5_index_t&gt; for H5_index_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5C_cache_incr_mode&gt; for H5C_cache_incr_mode","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5C_cache_flash_incr_mode&gt; for H5C_cache_flash_incr_mode","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5C_cache_decr_mode&gt; for H5C_cache_decr_mode","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_alloc_time_t&gt; for H5D_alloc_time_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_space_status_t&gt; for H5D_space_status_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_fill_time_t&gt; for H5D_fill_time_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_fill_value_t&gt; for H5D_fill_value_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_mpio_actual_chunk_opt_mode_t&gt; for H5D_mpio_actual_chunk_opt_mode_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_mpio_actual_io_mode_t&gt; for H5D_mpio_actual_io_mode_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_mpio_no_collective_cause_t&gt; for H5D_mpio_no_collective_cause_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_layout_t&gt; for H5D_layout_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5D_vds_view_t&gt; for H5D_vds_view_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5E_type_t&gt; for H5E_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5E_direction_t&gt; for H5E_direction_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_scope_t&gt; for H5F_scope_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_close_degree_t&gt; for H5F_close_degree_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_mem_t&gt; for H5F_mem_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_libver_t&gt; for H5F_libver_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_file_space_type_t&gt; for H5F_file_space_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5F_fspace_strategy_t&gt; for H5F_fspace_strategy_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5FD_file_image_op_t&gt; for H5FD_file_image_op_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5G_storage_type_t&gt; for H5G_storage_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5I_type_t&gt; for H5I_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5L_type_t&gt; for H5L_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5O_type_t&gt; for H5O_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5O_mcdt_search_ret_t&gt; for H5O_mcdt_search_ret_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5R_type_t&gt; for H5R_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5S_class_t&gt; for H5S_class_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5S_seloper_t&gt; for H5S_seloper_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5S_sel_type&gt; for H5S_sel_type","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_class_t&gt; for H5T_class_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_order_t&gt; for H5T_order_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_sign_t&gt; for H5T_sign_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_norm_t&gt; for H5T_norm_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_cset_t&gt; for H5T_cset_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_str_t&gt; for H5T_str_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_pad_t&gt; for H5T_pad_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_cmd_t&gt; for H5T_cmd_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_bkg_t&gt; for H5T_bkg_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_pers_t&gt; for H5T_pers_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_direction_t&gt; for H5T_direction_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_conv_except_t&gt; for H5T_conv_except_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5T_conv_ret_t&gt; for H5T_conv_ret_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5Z_SO_scale_type_t&gt; for H5Z_SO_scale_type_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5Z_EDC_t&gt; for H5Z_EDC_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5Z_cb_return_t&gt; for H5Z_cb_return_t","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;H5PL_type_t&gt; for H5PL_type_t","synthetic":false,"types":[]}];
implementors["nalgebra"] = [{"text":"impl&lt;N, R:&nbsp;Dim, C:&nbsp;Dim, S&gt; PartialOrd&lt;Matrix&lt;N, R, C, S&gt;&gt; for Matrix&lt;N, R, C, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: Scalar + PartialOrd,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Storage&lt;N, R, C&gt;,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;N:&nbsp;Scalar + PartialOrd, D:&nbsp;DimName&gt; PartialOrd&lt;Point&lt;N, D&gt;&gt; for Point&lt;N, D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DefaultAllocator: Allocator&lt;N, D&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl PartialOrd&lt;Axis&gt; for Axis","synthetic":false,"types":[]}];
implementors["netcdf"] = [{"text":"impl PartialOrd&lt;Options&gt; for Options","synthetic":false,"types":[]}];
implementors["noisy_float"] = [{"text":"impl&lt;F:&nbsp;Float, C:&nbsp;FloatChecker&lt;F&gt;&gt; PartialOrd&lt;F&gt; for NoisyFloat&lt;F, C&gt;","synthetic":false,"types":[]},{"text":"impl&lt;F:&nbsp;Float, C:&nbsp;FloatChecker&lt;F&gt;&gt; PartialOrd&lt;NoisyFloat&lt;F, C&gt;&gt; for NoisyFloat&lt;F, C&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone + Integer&gt; PartialOrd&lt;Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pest"] = [{"text":"impl&lt;'i&gt; PartialOrd&lt;Position&lt;'i&gt;&gt; for Position&lt;'i&gt;","synthetic":false,"types":[]}];
implementors["pest_meta"] = [{"text":"impl PartialOrd&lt;Rule&gt; for Rule","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl PartialOrd&lt;Transformations&gt; for Transformations","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl PartialOrd&lt;Ident&gt; for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl PartialOrd&lt;Span&gt; for Span","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Position&gt; for Position","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Literal&gt; for Literal","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassUnicodeRange&gt; for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassBytesRange&gt; for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Sequence&gt; for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Range&gt; for Utf8Range","synthetic":false,"types":[]}];
implementors["rgb"] = [{"text":"impl&lt;ComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;BGR&lt;ComponentType&gt;&gt; for BGR&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;PartialOrd, AlphaComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;BGRA&lt;ComponentType, AlphaComponentType&gt;&gt; for BGRA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;Gray&lt;ComponentType&gt;&gt; for Gray&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;PartialOrd, AlphaComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;GrayAlpha&lt;ComponentType, AlphaComponentType&gt;&gt; for GrayAlpha&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;RGB&lt;ComponentType&gt;&gt; for RGB&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;PartialOrd, AlphaComponentType:&nbsp;PartialOrd&gt; PartialOrd&lt;RGBA&lt;ComponentType, AlphaComponentType&gt;&gt; for RGBA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl PartialOrd&lt;Lifetime&gt; for Lifetime","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl PartialOrd&lt;B0&gt; for B0","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;B1&gt; for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;PartialOrd + Unsigned + NonZero&gt; PartialOrd&lt;PInt&lt;U&gt;&gt; for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;PartialOrd + Unsigned + NonZero&gt; PartialOrd&lt;NInt&lt;U&gt;&gt; for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Z0&gt; for Z0","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UTerm&gt; for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;PartialOrd, B:&nbsp;PartialOrd&gt; PartialOrd&lt;UInt&lt;U, B&gt;&gt; for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ATerm&gt; for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;PartialOrd, A:&nbsp;PartialOrd&gt; PartialOrd&lt;TArr&lt;V, A&gt;&gt; for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Greater&gt; for Greater","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Less&gt; for Less","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Equal&gt; for Equal","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()