(function() {var implementors = {};
implementors["arctk"] = [{"text":"impl Ord for Name","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Ord for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Array&lt;Item = u8&gt; + Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Ord&gt; Ord for CapacityError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Ord for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Ord for BigEndian","synthetic":false,"types":[]},{"text":"impl Ord for LittleEndian","synthetic":false,"types":[]}];
implementors["cocoa"] = [{"text":"impl Ord for NSApplicationPresentationOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSWindowStyleMask","synthetic":false,"types":[]},{"text":"impl Ord for NSWindowOrderingMode","synthetic":false,"types":[]},{"text":"impl Ord for NSAlignmentOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSWindowCollectionBehavior","synthetic":false,"types":[]},{"text":"impl Ord for NSWindowOcclusionState","synthetic":false,"types":[]},{"text":"impl Ord for NSEventSwipeTrackingOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSEventPhase","synthetic":false,"types":[]},{"text":"impl Ord for NSTouchPhase","synthetic":false,"types":[]},{"text":"impl Ord for NSEventMask","synthetic":false,"types":[]},{"text":"impl Ord for NSEventModifierFlags","synthetic":false,"types":[]},{"text":"impl Ord for NSEnumerationOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSURLBookmarkCreationOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSURLBookmarkResolutionOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSDataReadingOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSDataBase64EncodingOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSDataBase64DecodingOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSDataWritingOptions","synthetic":false,"types":[]},{"text":"impl Ord for NSDataSearchOptions","synthetic":false,"types":[]},{"text":"impl Ord for EdgeAntialiasingMask","synthetic":false,"types":[]},{"text":"impl Ord for CornerMask","synthetic":false,"types":[]},{"text":"impl Ord for AutoresizingMask","synthetic":false,"types":[]}];
implementors["console"] = [{"text":"impl Ord for Attribute","synthetic":false,"types":[]}];
implementors["core_foundation"] = [{"text":"impl Ord for CFDate","synthetic":false,"types":[]},{"text":"impl Ord for CFNumber","synthetic":false,"types":[]}];
implementors["core_graphics"] = [{"text":"impl Ord for CGEventFlags","synthetic":false,"types":[]},{"text":"impl Ord for CGGradientDrawingOptions","synthetic":false,"types":[]}];
implementors["crossbeam_epoch"] = [{"text":"impl&lt;T:&nbsp;?Sized + Pointable, '_&gt; Ord for Shared&lt;'_, T&gt;","synthetic":false,"types":[]}];
implementors["deflate"] = [{"text":"impl Ord for Compression","synthetic":false,"types":[]},{"text":"impl Ord for MatchingType","synthetic":false,"types":[]}];
implementors["either"] = [{"text":"impl&lt;L:&nbsp;Ord, R:&nbsp;Ord&gt; Ord for Either&lt;L, R&gt;","synthetic":false,"types":[]}];
implementors["generic_array"] = [{"text":"impl&lt;T:&nbsp;Ord, N&gt; Ord for GenericArray&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: ArrayLength&lt;T&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Ord for Level","synthetic":false,"types":[]},{"text":"impl Ord for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Ord for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["ndarray"] = [{"text":"impl Ord for Axis","synthetic":false,"types":[]}];
implementors["netcdf"] = [{"text":"impl Ord for Options","synthetic":false,"types":[]}];
implementors["noisy_float"] = [{"text":"impl&lt;F:&nbsp;Float, C:&nbsp;FloatChecker&lt;F&gt;&gt; Ord for NoisyFloat&lt;F, C&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone + Integer&gt; Ord for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pest"] = [{"text":"impl&lt;'i&gt; Ord for Position&lt;'i&gt;","synthetic":false,"types":[]}];
implementors["pest_meta"] = [{"text":"impl Ord for Rule","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Ord for Transformations","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Ord for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Ord for Span","synthetic":false,"types":[]},{"text":"impl Ord for Position","synthetic":false,"types":[]},{"text":"impl Ord for Literal","synthetic":false,"types":[]},{"text":"impl Ord for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl Ord for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl Ord for Utf8Range","synthetic":false,"types":[]}];
implementors["rgb"] = [{"text":"impl&lt;ComponentType:&nbsp;Ord&gt; Ord for BGR&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Ord, AlphaComponentType:&nbsp;Ord&gt; Ord for BGRA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Ord&gt; Ord for Gray&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Ord, AlphaComponentType:&nbsp;Ord&gt; Ord for GrayAlpha&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Ord&gt; Ord for RGB&lt;ComponentType&gt;","synthetic":false,"types":[]},{"text":"impl&lt;ComponentType:&nbsp;Ord, AlphaComponentType:&nbsp;Ord&gt; Ord for RGBA&lt;ComponentType, AlphaComponentType&gt;","synthetic":false,"types":[]}];
implementors["shred"] = [{"text":"impl Ord for InvalidBorrow","synthetic":false,"types":[]},{"text":"impl Ord for ResourceId","synthetic":false,"types":[]}];
implementors["smallvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Ord for SmallVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Ord,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["specs"] = [{"text":"impl Ord for Entity","synthetic":false,"types":[]},{"text":"impl Ord for Generation","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Ord for Lifetime","synthetic":false,"types":[]}];
implementors["typenum"] = [{"text":"impl Ord for B0","synthetic":false,"types":[]},{"text":"impl Ord for B1","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Ord + Unsigned + NonZero&gt; Ord for PInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Ord + Unsigned + NonZero&gt; Ord for NInt&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Z0","synthetic":false,"types":[]},{"text":"impl Ord for UTerm","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Ord, B:&nbsp;Ord&gt; Ord for UInt&lt;U, B&gt;","synthetic":false,"types":[]},{"text":"impl Ord for ATerm","synthetic":false,"types":[]},{"text":"impl&lt;V:&nbsp;Ord, A:&nbsp;Ord&gt; Ord for TArr&lt;V, A&gt;","synthetic":false,"types":[]},{"text":"impl Ord for Greater","synthetic":false,"types":[]},{"text":"impl Ord for Less","synthetic":false,"types":[]},{"text":"impl Ord for Equal","synthetic":false,"types":[]}];
implementors["winit"] = [{"text":"impl Ord for DeviceId","synthetic":false,"types":[]},{"text":"impl Ord for VirtualKeyCode","synthetic":false,"types":[]},{"text":"impl Ord for ModifiersState","synthetic":false,"types":[]},{"text":"impl Ord for VideoMode","synthetic":false,"types":[]},{"text":"impl Ord for MonitorHandle","synthetic":false,"types":[]},{"text":"impl Ord for WindowId","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()